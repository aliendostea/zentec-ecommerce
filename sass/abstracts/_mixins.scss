@mixin clearfix{
  &::after{
    content: "";
    display: table;
    clear: both;
  }
}

 // MEDIA QUERY MANAGER
 /*
 0 - 600px:         Phone
 600 - 900px:       Tablet portrait
 900 - 1200px:      Tablet landscape
 1200 - 1800px:     Desktop
1800px + :          Big Desktop
 /*

  &breakpoint arguement choices
     - phone
     - tab-portrait
     - tab-land
     - big-desktop

     1em = 16px 
 */
// RESPONSIVE BREAKPOINTS
$bp-largest: 75em;   // 1200px
$bp-large: 62.5em;   // 1000px
$bp-medium: 50em;    // 800px;
$bp-small: 37.5em;    // 600px;


 @mixin respond($breakpoint) {
    @if $breakpoint == mini-phone {
        @media only screen and (max-width: 23.75em) { @content };     //380px
    }
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content };     //600px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };    //900px
    }
    @if $breakpoint == tab-between-port-land {
        @media only screen and (max-width: 80em) { @content };       //120000000px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };       //1200px
    }
    @if $breakpoint == tab-between-land-desktop {
        @media only screen and (max-width: 100em) { @content };       //120000000px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };    //1800
    }
}

/// mixin para grid de las columnas 
@mixin grid-template-columns-all-full-start-end {
     grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(10, [col-start] minmax(min-content, 13rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];                            
   
    @include respond(tab-between-port-land){
        grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(10, [col-start] minmax(min-content, 13rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end]; 
    }
    @include respond(tab-port){
        grid-template-columns: [full-start] minmax(2rem, 1fr) [center-start] repeat(4, [col-start] minmax(min-content, 20rem) [col-end]) [center-end] minmax(2rem, 1fr) [full-end]; 
    }
    @include respond(phone){
        grid-template-columns: [full-start] minmax(2rem, 1fr) [center-start] repeat(6, [col-start] minmax(4rem, 14rem) [col-end]) [center-end] minmax(2rem, 1fr) [full-end]; 
    }
}


.test__responsive{ 
    background-color: rgb(130, 172, 172);
    display: block;  
    color: white;
    font-size: 1.3rem; 
    position: fixed;
    top: 0; left: 250px;
    z-index: 100010;

    @include respond(tab-between-land-desktop){
       background-color: rgb(216, 99, 31); 
       color: rgb(18, 34, 4);
    }
    @include respond(tab-land){
       background-color: rgb(33, 77, 172); 
       color: rgb(219, 214, 250);
    }
    @include respond(tab-between-port-land){
       background-color: rgb(172, 33, 110); 
       color: rgb(10, 65, 35);
    } 
    @include respond(tab-port){
       background-color: rgb(172, 135, 33);
       color: rgb(65, 43, 10);
    } 
    @include respond(phone){
        background-color: rgb(43, 49, 49); 
        color: rgb(255, 169, 169);
    } 
    @include respond(mini-phone){
        background-color: rgb(50, 206, 206); 
        color: rgb(167, 67, 67);
    }    
    @include respond(big-desktop){
       background-color: rgb(95, 160, 52); 
       color: rgb(18, 34, 4);
    }  
}

/// start btn mixins new
@mixin body-btn-big-bg {
    padding: 1.9rem 2.8rem;
    border-radius: $btn-border-radius;
}
@mixin body-btn-medium-bg  {
      font-size: 1.5rem;
      padding: 1.5rem 2.8rem;
      border-radius: $btn-border-radius;
      border: $btn-borderline;    
}

@mixin body-btn-borderline {   
    padding: 1.9rem 2.8rem;
    border-radius: $btn-border-radius;
    border: $btn-borderline;
    background-color: transparent;
}
@mixin body-btn-link {
    height: 6rem;
    width: 6rem;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: all .5s; 
    &:hover{
        background-color: $color-secondary;
        transform: translateY(-4px);    
    }
    & img{
        height: 3.6rem;
    }
}

@mixin btn-color-bg-color($color) {

    @if $color == color-primary {
        color: $color-grey-light-1;
        background-color: $color-primary;
        &:hover{
            color: white;
            background-color: $color-primary-dark;
        }
    }
    @if $color == color-secundary {
        color: $color-grey-light-1;
        background-color: $color-secondary;
        &:hover{
            color: white;
            background-color: #251F62;
        }
    }
    @if $color == color-brown-dark-2 {
        color: $color-grey-light-1;
        background-color: $color-brown-dark-2;
        &:hover{
            color: white;
            background-color: $color-brown-dark-1;
        }
    }
    @if $color == white {
        color: $color-primary;
        background-color: $color-grey-light-1;
        &:hover{
            color: $color-primary-dark;
            background-color: $color-grey-light-2;
        }
    }
}

@mixin btn-body-round-1 {
    width: 6rem;
    height: 6rem;
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    list-style: none;
    border-radius: 50%;
    transition: all .5s;
    cursor: pointer;

    &:hover{
      background-color: rgb(211, 211, 211);
    }
}

@mixin btn__lines-before-after {
    width: 3rem;
    height: 3px;
    border-radius: 5px;
    background-color: $color-primary;
    transition: all .3s;
    position: relative;
}

@mixin btn-color-border-color($color) {

    @if $color == color-primary {
        color: $color-primary;
        border: 2px solid $color-primary;
        &:hover{
            color: $color-primary-dark;
            border: 2px solid $color-primary-dark;
        }
    }
    @if $color == color-secundary {
        color: $color-secondary;
        border: 2px solid $color-secondary;
        &:hover{
            color: #251F62;
            border: 2px solid #251F62;
        }
    }
    @if $color == color-brown-dark-2 {
        color: $color-brown-dark-2;
        border: 2px solid $color-brown-dark-2;
        &:hover{
            color: $color-brown-dark-1;
             border: 2px solid $color-brown-dark-1;
        }
    }
    @if $color == white {
        color: $color-grey-light-1;
        border: 2px solid $color-grey-light-1;
        &:hover{
            color: $color-grey-light-2;
            border: 2px solid $color-grey-light-2;
        }
    }
}

/// mixins product parent
@mixin parent-body-product-section {
    grid-column: $grid-column-full-start-end;
    display: grid;
    grid-row-gap: 3rem;
    padding: 5rem 10rem 4rem 10rem;
}

/// mixins product detail color, watt, num
@mixin product-element-circles-click {
    grid-column: 1 / 2;
    grid-row: 5 / 6;
    display: grid;
    grid-template-columns: repeat(4, max-content);
    grid-template-rows: repeat(2, min-content);
    margin: .7rem 0;
    grid-row-gap: .5rem;

    &-name{
        grid-column: 1 / 5;
        grid-row: 1 / 2;
        font-size: 1.5rem;
        font-weight: 700;

        & span{
            font-size: 2rem;
            font-weight: 400;
        }
    }
    &-item{        
        grid-row: 2 / 3;
        width: 5rem;
        height: 5rem;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 1.5rem;
        border-radius: 50%;
        cursor: pointer;
        transition: all .2s;
        margin-right: 1rem;
        background-color: rgb(255, 255, 255); // borrar
        border: 4px solid $color-grey-light-2;

        
        &:hover{transform: translateY(-2px);}
        &:active{transform: translateY(1px);}

        &--active{ border: 4px solid $color-primary; }

        // &--1{ background-color: rgb(26, 29, 27); }
        // &--2{ background-color: rgb(92, 6, 6); }
        // &--3{ background-color: rgb(221, 221, 221); }
    }
  
}

/// popup overlay
@mixin popup-overlay {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: $color-grey-dark-overlay;
    visibility: hidden;
    position: fixed;
    top: 0;right: 0;
    bottom: 0;left: 0;
    opacity: 0;
    transition: opacity 500ms;   
    z-index: -1;
}

@mixin popup-overlay--active {
    display: flex;
    opacity: 1;
    visibility: visible;
    z-index: 999;  
}


